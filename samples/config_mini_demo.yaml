name: "Demo"
module: "demo"
description: "demo generated app"
debug: true
auth-srv: "github.com/mtgroupit/mt-mock-extauthapi"
notifier: "github.com/Lisss13/notifier"

add-profile-fields:
  departmentID:
    type: int
  departmentName:
    type: string
    
access-attributes:
  - workTime
  - location
  - gadget

rules:
  checkUserLocation:
    attributes:
      - location
    roles:
      - user
      - guest
  checkAccessHappensInWorkingTimeAndAllowedPlace:
    attributes:
      - location
      - workTime
    roles:
      - admin
      - manager
  checkAdminUsingAllowedDevices:
    attributes:
      - gadget
    roles:
      - admin

models:

  employee:
    description: "employee object"
    columns:
      id:
        type: "uuid"
      name:
        type: "string"
        sort-on: true
        sort-default: true
        sort-order-default: "ASC"
        required: true
        pattern: "^[A-Za-z ,.'-]+$"
      dateOfBirth:
        type: "string"
        format: "date"
        required: true
      email:
        type: "string"
        format: "email"
        strict-filter: true
        required: true
      defaultPhone:
        type: "string"
        format: "phone"
        required: true
      phones:
        type: "[]string"
      links:
        type: "custom.webContact"
      department:
        type: "string"
        default: "qwe"
        pattern: "^[A-Za-z ,.'-]+$"
      age:
        type: "int"
        sort-on: true
      salary:
        type: "decimal"
      multiplierSalary:
        type: "float"
        enum: [1, 2.5, 5.9]
        default: "1"
      status:
        type: "string"
        enum: ['working', 'onVacation']
      company:
        type: "model.company"
        sort-on: true
        sort-by:
          - name
          - headOfficeLocation.name
      contract:
        type: "model.document"
    methods:
      - get
      - getMy
      - get(id, name, email, defaultPhone, phones)[contact]
      - getMy(links, contract)
      - addMy
      - editMy
      - editOrAddMy
      - editMy(defaultPhone, phones)[phones]
      - editMy(links)
      - deleteMy
      - list
      - list(id, name*, company*(name, locations(id, name)))[withCompanyLocations]
      - custom
    rules-set:
      checkUserLocation:
        - deleteMy
      checkAccessHappensInWorkingTimeAndAllowedPlace:
        - getMy
        - getMy(links, contract)
        - addMy
        - editMy
        - editOrAddMy
        - editMy(defaultPhone, phones)[phones]
        - editMy(links)
        - deleteMy
      checkAdminUsingAllowedDevices:
        - get
        - get(id, name, email, defaultPhone, phones)[contact]
        - list
        - list(id, name*, company*(name, locations(id, name)))[withCompanyLocations]
        - custom

  company:
    description: "company object"
    detailed-pagination: true
    return-when-edit: true
    columns:
      id:
        type: "uuid"
      name:
        type: "string"
        sort-on: true
        required: true
      occupation:
        type: "string"
      headOfficeLocation:
        type: "model.location"
      locations:
        type: "[]model.location"
        default: 3
      contacts:
        type: "[]custom.contact"
    methods:
      - get
      - add
      - delete
      - edit(headOfficeLocation)
      - list
      - list(name, headOfficeLocation*(id, name), locations(id, name))
    rules-set:
      checkUserLocation:
        - delete
      checkAccessHappensInWorkingTimeAndAllowedPlace:
        - get
        - add
        - delete
        - edit(headOfficeLocation)
        - list
        - list(name, headOfficeLocation*(id, name), locations(id, name))

  ourCompany:
    description: "ourCompany object"
    bind-to-isolated-entity: true
    columns:
      id:
        type: "uuid"
      owner:
        type: "model.employee"
        required: true
      company:
        type: "model.company"
        required: true
    methods:
      - getMy
      - addMy
      - editMy
      - deleteMy
    rules-set:
      checkUserLocation:
        - deleteMy
      checkAccessHappensInWorkingTimeAndAllowedPlace:
        - getMy
        - addMy
        - editMy
        - deleteMy

  location:
    description: "location object"
    tags:
      - Supporting
    shared: true
    columns:
      id:
        type: "uuid"
      name:
        type: "string"
        required: true
    methods:
      - get{noSecure}
      - add
      - edit
      - delete
      - list
    rules-set:
      checkAdminUsingAllowedDevices:
      - add
      - edit
      - delete

  document:
    description: "document object for save files"
    tags:
      - Supporting
    columns:
      id:
        type: "uuid"
      name:
        type: "string"
        required: true
      link:
        type: "string"
        format: "url"
        required: true
      createdAt:
      createdBy:
      modifiedAt:
      modifiedBy:
    methods:
      - get
      - add
      - edit
      - delete
      - list
    rules-set:
      checkUserLocation:
        - add
        - edit
        - delete
      checkAccessHappensInWorkingTimeAndAllowedPlace:
        - get
        - add
        - edit
        - delete
        - list
      checkAdminUsingAllowedDevices:
        - add
        - edit
        - delete
    
custom-types:
  
  contact:
    description: "contact is type for storing contact information"
    fields:
      departure:
        type: "string"
        required: true
        pattern: "^[0-9A-Za-z ,.-]+$"
      phone:
        type: "string"
        format: "phone"
      email:
        type: "string"
        format: "email"
      web:
        type: "custom.webContact"
      
  webContact:
    description: "webContact "
    fields:
      facebook:
        type: "string"
        format: "url"
      instagram:
        type: "string"
        format: "url"
      other:
        type: "string"
        format: "url"
