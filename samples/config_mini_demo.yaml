name: "Demo"
module: "demo"
description: "demo generated app"
debug: true # used for create flag and env variable for reset database
auth-srv: "github.com/mtgroupit/mt-mock-extauthapi"

models:

  employee:
    description: "employee object"
    columns:
      id:
        type: "uuid"
      name:
        type: "string"
        sort-on: true
        sort-default: true
        sort-order-default: "ASC"
      dateOfBirth:
        type: "string"
        format: "date-time"
      email:
        type: "string"
        format: "email"
        strict-filter: true
      defaultPhone:
        type: "string"
        format: "phone"
      phones:
        type: "[]string"
      links:
        type: "custom.webContact"
      department:
        type: "string"
      age:
        type: "int"
      salary:
        type: "decimal"
      multiplierSalary:
        type: "float"
        enum: [1, 2.5, 5.9]
        default: "1"
      status:
        type: "string"
        enum: ['working', 'onVacation']
      company:
        type: "model.company"
        sort-on: true
        sort-by:
          - name
          - headOfficeLocation.name
      contract:
        type: "model.document"
    methods:
      - get
      - getMy
      - addMy
      - editMy
      - editOrAddMy
      - editMy(defaultPhone, phones)[phones]
      - editMy(links)
      - deleteMy
      - list
      - list(id, name*, company*(name, locations(id, name)))[withCompanyLocations]
      - custom

  company:
    description: "company object"
    detailed-pagination: true
    return-when-edit: true
    columns:
      id:
        type: "uuid"
      name:
        type: "string"
        sort-on: true
      occupation:
        type: "string"
      headOfficeLocation:
        type: "model.location"
      locations:
        type: "[]model.location"
        default: 3
      contacts:
        type: "[]custom.contact"
    methods:
      - get
      - add
      - delete
      - edit(headOfficeLocation)
      - list
      - list(name, headOfficeLocation*(id, name))

  ourCompany:
    description: "ourCompany object"
    bind-to-isolated-entity: true
    columns:
      id:
        type: "uuid"
      owner:
        type: "model.employee"
      company:
        type: "model.company"
    methods:
      - getMy
      - addMy
      - editMy
      - deleteMy

  location:
    description: "location object"
    tags:
      - Supporting
    shared: true
    columns:
      id:
        type: "uuid"
      name:
        type: "string"
    methods:
      - get
      - add
      - edit
      - delete
      - list

  document:
    description: "document object for save files"
    tags:
      - Supporting
    columns:
      id:
        type: "uuid"
      name:
        type: "string"
      link:
        type: "string"
        format: "url"
      createdAt:
      createdBy:
      modifiedAt:
      modifiedBy:
    methods:
      - get
      - add
      - edit
      - delete
      - list
    
custom-types:
  
  contact:
    description: "contact is type for storing contact information"
    fields:
      departure:
        type: "string"
      phone:
        type: "string"
        format: "phone"
      email:
        type: "string"
        format: "email"
      web:
        type: "custom.webContact"
      
  webContact:
    description: "webContact "
    fields:
      facebook:
        type: "string"
        format: "url"
      instagram:
        type: "string"
        format: "url"
      other:
        type: "string"
        format: "url"
