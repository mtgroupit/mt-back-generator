// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/Lisss13/french-back-template/snouki-mobile/mtmb-extauthapi/models"
)

// IsUsernameAvailableOKCode is the HTTP code returned for type IsUsernameAvailableOK
const IsUsernameAvailableOKCode int = 200

/*IsUsernameAvailableOK OK

swagger:response isUsernameAvailableOK
*/
type IsUsernameAvailableOK struct {

	/*
	  In: Body
	*/
	Payload *IsUsernameAvailableOKBody `json:"body,omitempty"`
}

// NewIsUsernameAvailableOK creates IsUsernameAvailableOK with default headers values
func NewIsUsernameAvailableOK() *IsUsernameAvailableOK {

	return &IsUsernameAvailableOK{}
}

// WithPayload adds the payload to the is username available o k response
func (o *IsUsernameAvailableOK) WithPayload(payload *IsUsernameAvailableOKBody) *IsUsernameAvailableOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the is username available o k response
func (o *IsUsernameAvailableOK) SetPayload(payload *IsUsernameAvailableOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *IsUsernameAvailableOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*IsUsernameAvailableDefault Generic error response.

swagger:response isUsernameAvailableDefault
*/
type IsUsernameAvailableDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewIsUsernameAvailableDefault creates IsUsernameAvailableDefault with default headers values
func NewIsUsernameAvailableDefault(code int) *IsUsernameAvailableDefault {
	if code <= 0 {
		code = 500
	}

	return &IsUsernameAvailableDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the is username available default response
func (o *IsUsernameAvailableDefault) WithStatusCode(code int) *IsUsernameAvailableDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the is username available default response
func (o *IsUsernameAvailableDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the is username available default response
func (o *IsUsernameAvailableDefault) WithPayload(payload *models.Error) *IsUsernameAvailableDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the is username available default response
func (o *IsUsernameAvailableDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *IsUsernameAvailableDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
