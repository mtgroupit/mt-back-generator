// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/Lisss13/french-back-template/snouki-mobile/mtmb-extauthapi/models"
)

// IsEmailAvailableOKCode is the HTTP code returned for type IsEmailAvailableOK
const IsEmailAvailableOKCode int = 200

/*IsEmailAvailableOK OK

swagger:response isEmailAvailableOK
*/
type IsEmailAvailableOK struct {

	/*
	  In: Body
	*/
	Payload *IsEmailAvailableOKBody `json:"body,omitempty"`
}

// NewIsEmailAvailableOK creates IsEmailAvailableOK with default headers values
func NewIsEmailAvailableOK() *IsEmailAvailableOK {

	return &IsEmailAvailableOK{}
}

// WithPayload adds the payload to the is email available o k response
func (o *IsEmailAvailableOK) WithPayload(payload *IsEmailAvailableOKBody) *IsEmailAvailableOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the is email available o k response
func (o *IsEmailAvailableOK) SetPayload(payload *IsEmailAvailableOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *IsEmailAvailableOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*IsEmailAvailableDefault Generic error response.

swagger:response isEmailAvailableDefault
*/
type IsEmailAvailableDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewIsEmailAvailableDefault creates IsEmailAvailableDefault with default headers values
func NewIsEmailAvailableDefault(code int) *IsEmailAvailableDefault {
	if code <= 0 {
		code = 500
	}

	return &IsEmailAvailableDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the is email available default response
func (o *IsEmailAvailableDefault) WithStatusCode(code int) *IsEmailAvailableDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the is email available default response
func (o *IsEmailAvailableDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the is email available default response
func (o *IsEmailAvailableDefault) WithPayload(payload *models.Error) *IsEmailAvailableDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the is email available default response
func (o *IsEmailAvailableDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *IsEmailAvailableDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
