// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/Lisss13/french-back-template/snouki-mobile/mtmb-extauthapi/models"
)

// RegisterLoginOAuthOKCode is the HTTP code returned for type RegisterLoginOAuthOK
const RegisterLoginOAuthOKCode int = 200

/*RegisterLoginOAuthOK OK

swagger:response registerLoginOAuthOK
*/
type RegisterLoginOAuthOK struct {
	/*Session token.

	 */
	SetCookie string `json:"Set-Cookie"`

	/*
	  In: Body
	*/
	Payload *RegisterLoginOAuthOKBody `json:"body,omitempty"`
}

// NewRegisterLoginOAuthOK creates RegisterLoginOAuthOK with default headers values
func NewRegisterLoginOAuthOK() *RegisterLoginOAuthOK {

	return &RegisterLoginOAuthOK{}
}

// WithSetCookie adds the setCookie to the register login o auth o k response
func (o *RegisterLoginOAuthOK) WithSetCookie(setCookie string) *RegisterLoginOAuthOK {
	o.SetCookie = setCookie
	return o
}

// SetSetCookie sets the setCookie to the register login o auth o k response
func (o *RegisterLoginOAuthOK) SetSetCookie(setCookie string) {
	o.SetCookie = setCookie
}

// WithPayload adds the payload to the register login o auth o k response
func (o *RegisterLoginOAuthOK) WithPayload(payload *RegisterLoginOAuthOKBody) *RegisterLoginOAuthOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register login o auth o k response
func (o *RegisterLoginOAuthOK) SetPayload(payload *RegisterLoginOAuthOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterLoginOAuthOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Set-Cookie

	setCookie := o.SetCookie
	if setCookie != "" {
		rw.Header().Set("Set-Cookie", setCookie)
	}

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*RegisterLoginOAuthDefault - 502.713: failed to get user profile from oauth server
- 403.714: state does not match
- 403.715: user is blocked


swagger:response registerLoginOAuthDefault
*/
type RegisterLoginOAuthDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRegisterLoginOAuthDefault creates RegisterLoginOAuthDefault with default headers values
func NewRegisterLoginOAuthDefault(code int) *RegisterLoginOAuthDefault {
	if code <= 0 {
		code = 500
	}

	return &RegisterLoginOAuthDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the register login o auth default response
func (o *RegisterLoginOAuthDefault) WithStatusCode(code int) *RegisterLoginOAuthDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the register login o auth default response
func (o *RegisterLoginOAuthDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the register login o auth default response
func (o *RegisterLoginOAuthDefault) WithPayload(payload *models.Error) *RegisterLoginOAuthDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register login o auth default response
func (o *RegisterLoginOAuthDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterLoginOAuthDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
