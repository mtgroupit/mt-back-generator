// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// OAuthServer OAuth server for login or registration.
//
// swagger:model OAuthServer
type OAuthServer string

const (

	// OAuthServerGoogle captures enum value "google"
	OAuthServerGoogle OAuthServer = "google"

	// OAuthServerVk captures enum value "vk"
	OAuthServerVk OAuthServer = "vk"

	// OAuthServerFacebook captures enum value "facebook"
	OAuthServerFacebook OAuthServer = "facebook"

	// OAuthServerYandex captures enum value "yandex"
	OAuthServerYandex OAuthServer = "yandex"
)

// for schema
var oAuthServerEnum []interface{}

func init() {
	var res []OAuthServer
	if err := json.Unmarshal([]byte(`["google","vk","facebook","yandex"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		oAuthServerEnum = append(oAuthServerEnum, v)
	}
}

func (m OAuthServer) validateOAuthServerEnum(path, location string, value OAuthServer) error {
	if err := validate.EnumCase(path, location, value, oAuthServerEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this o auth server
func (m OAuthServer) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOAuthServerEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
