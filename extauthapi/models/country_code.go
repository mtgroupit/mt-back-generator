// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// CountryCode Country code (ISO 3166-1 alpha-2).
//
// swagger:model CountryCode
type CountryCode string

const (

	// CountryCodeAD captures enum value "AD"
	CountryCodeAD CountryCode = "AD"

	// CountryCodeAE captures enum value "AE"
	CountryCodeAE CountryCode = "AE"

	// CountryCodeAF captures enum value "AF"
	CountryCodeAF CountryCode = "AF"

	// CountryCodeAG captures enum value "AG"
	CountryCodeAG CountryCode = "AG"

	// CountryCodeAI captures enum value "AI"
	CountryCodeAI CountryCode = "AI"

	// CountryCodeAL captures enum value "AL"
	CountryCodeAL CountryCode = "AL"

	// CountryCodeAM captures enum value "AM"
	CountryCodeAM CountryCode = "AM"

	// CountryCodeAO captures enum value "AO"
	CountryCodeAO CountryCode = "AO"

	// CountryCodeAQ captures enum value "AQ"
	CountryCodeAQ CountryCode = "AQ"

	// CountryCodeAR captures enum value "AR"
	CountryCodeAR CountryCode = "AR"

	// CountryCodeAS captures enum value "AS"
	CountryCodeAS CountryCode = "AS"

	// CountryCodeAT captures enum value "AT"
	CountryCodeAT CountryCode = "AT"

	// CountryCodeAU captures enum value "AU"
	CountryCodeAU CountryCode = "AU"

	// CountryCodeAW captures enum value "AW"
	CountryCodeAW CountryCode = "AW"

	// CountryCodeAX captures enum value "AX"
	CountryCodeAX CountryCode = "AX"

	// CountryCodeAZ captures enum value "AZ"
	CountryCodeAZ CountryCode = "AZ"

	// CountryCodeBA captures enum value "BA"
	CountryCodeBA CountryCode = "BA"

	// CountryCodeBB captures enum value "BB"
	CountryCodeBB CountryCode = "BB"

	// CountryCodeBD captures enum value "BD"
	CountryCodeBD CountryCode = "BD"

	// CountryCodeBE captures enum value "BE"
	CountryCodeBE CountryCode = "BE"

	// CountryCodeBF captures enum value "BF"
	CountryCodeBF CountryCode = "BF"

	// CountryCodeBG captures enum value "BG"
	CountryCodeBG CountryCode = "BG"

	// CountryCodeBH captures enum value "BH"
	CountryCodeBH CountryCode = "BH"

	// CountryCodeBI captures enum value "BI"
	CountryCodeBI CountryCode = "BI"

	// CountryCodeBJ captures enum value "BJ"
	CountryCodeBJ CountryCode = "BJ"

	// CountryCodeBL captures enum value "BL"
	CountryCodeBL CountryCode = "BL"

	// CountryCodeBM captures enum value "BM"
	CountryCodeBM CountryCode = "BM"

	// CountryCodeBN captures enum value "BN"
	CountryCodeBN CountryCode = "BN"

	// CountryCodeBO captures enum value "BO"
	CountryCodeBO CountryCode = "BO"

	// CountryCodeBQ captures enum value "BQ"
	CountryCodeBQ CountryCode = "BQ"

	// CountryCodeBR captures enum value "BR"
	CountryCodeBR CountryCode = "BR"

	// CountryCodeBS captures enum value "BS"
	CountryCodeBS CountryCode = "BS"

	// CountryCodeBT captures enum value "BT"
	CountryCodeBT CountryCode = "BT"

	// CountryCodeBV captures enum value "BV"
	CountryCodeBV CountryCode = "BV"

	// CountryCodeBW captures enum value "BW"
	CountryCodeBW CountryCode = "BW"

	// CountryCodeBY captures enum value "BY"
	CountryCodeBY CountryCode = "BY"

	// CountryCodeBZ captures enum value "BZ"
	CountryCodeBZ CountryCode = "BZ"

	// CountryCodeCA captures enum value "CA"
	CountryCodeCA CountryCode = "CA"

	// CountryCodeCC captures enum value "CC"
	CountryCodeCC CountryCode = "CC"

	// CountryCodeCD captures enum value "CD"
	CountryCodeCD CountryCode = "CD"

	// CountryCodeCF captures enum value "CF"
	CountryCodeCF CountryCode = "CF"

	// CountryCodeCG captures enum value "CG"
	CountryCodeCG CountryCode = "CG"

	// CountryCodeCH captures enum value "CH"
	CountryCodeCH CountryCode = "CH"

	// CountryCodeCI captures enum value "CI"
	CountryCodeCI CountryCode = "CI"

	// CountryCodeCK captures enum value "CK"
	CountryCodeCK CountryCode = "CK"

	// CountryCodeCL captures enum value "CL"
	CountryCodeCL CountryCode = "CL"

	// CountryCodeCM captures enum value "CM"
	CountryCodeCM CountryCode = "CM"

	// CountryCodeCN captures enum value "CN"
	CountryCodeCN CountryCode = "CN"

	// CountryCodeCO captures enum value "CO"
	CountryCodeCO CountryCode = "CO"

	// CountryCodeCR captures enum value "CR"
	CountryCodeCR CountryCode = "CR"

	// CountryCodeCU captures enum value "CU"
	CountryCodeCU CountryCode = "CU"

	// CountryCodeCV captures enum value "CV"
	CountryCodeCV CountryCode = "CV"

	// CountryCodeCW captures enum value "CW"
	CountryCodeCW CountryCode = "CW"

	// CountryCodeCX captures enum value "CX"
	CountryCodeCX CountryCode = "CX"

	// CountryCodeCY captures enum value "CY"
	CountryCodeCY CountryCode = "CY"

	// CountryCodeCZ captures enum value "CZ"
	CountryCodeCZ CountryCode = "CZ"

	// CountryCodeDE captures enum value "DE"
	CountryCodeDE CountryCode = "DE"

	// CountryCodeDJ captures enum value "DJ"
	CountryCodeDJ CountryCode = "DJ"

	// CountryCodeDK captures enum value "DK"
	CountryCodeDK CountryCode = "DK"

	// CountryCodeDM captures enum value "DM"
	CountryCodeDM CountryCode = "DM"

	// CountryCodeDO captures enum value "DO"
	CountryCodeDO CountryCode = "DO"

	// CountryCodeDZ captures enum value "DZ"
	CountryCodeDZ CountryCode = "DZ"

	// CountryCodeEC captures enum value "EC"
	CountryCodeEC CountryCode = "EC"

	// CountryCodeEE captures enum value "EE"
	CountryCodeEE CountryCode = "EE"

	// CountryCodeEG captures enum value "EG"
	CountryCodeEG CountryCode = "EG"

	// CountryCodeEH captures enum value "EH"
	CountryCodeEH CountryCode = "EH"

	// CountryCodeER captures enum value "ER"
	CountryCodeER CountryCode = "ER"

	// CountryCodeES captures enum value "ES"
	CountryCodeES CountryCode = "ES"

	// CountryCodeET captures enum value "ET"
	CountryCodeET CountryCode = "ET"

	// CountryCodeFI captures enum value "FI"
	CountryCodeFI CountryCode = "FI"

	// CountryCodeFJ captures enum value "FJ"
	CountryCodeFJ CountryCode = "FJ"

	// CountryCodeFK captures enum value "FK"
	CountryCodeFK CountryCode = "FK"

	// CountryCodeFM captures enum value "FM"
	CountryCodeFM CountryCode = "FM"

	// CountryCodeFO captures enum value "FO"
	CountryCodeFO CountryCode = "FO"

	// CountryCodeFR captures enum value "FR"
	CountryCodeFR CountryCode = "FR"

	// CountryCodeGA captures enum value "GA"
	CountryCodeGA CountryCode = "GA"

	// CountryCodeGB captures enum value "GB"
	CountryCodeGB CountryCode = "GB"

	// CountryCodeGD captures enum value "GD"
	CountryCodeGD CountryCode = "GD"

	// CountryCodeGE captures enum value "GE"
	CountryCodeGE CountryCode = "GE"

	// CountryCodeGF captures enum value "GF"
	CountryCodeGF CountryCode = "GF"

	// CountryCodeGG captures enum value "GG"
	CountryCodeGG CountryCode = "GG"

	// CountryCodeGH captures enum value "GH"
	CountryCodeGH CountryCode = "GH"

	// CountryCodeGI captures enum value "GI"
	CountryCodeGI CountryCode = "GI"

	// CountryCodeGL captures enum value "GL"
	CountryCodeGL CountryCode = "GL"

	// CountryCodeGM captures enum value "GM"
	CountryCodeGM CountryCode = "GM"

	// CountryCodeGN captures enum value "GN"
	CountryCodeGN CountryCode = "GN"

	// CountryCodeGP captures enum value "GP"
	CountryCodeGP CountryCode = "GP"

	// CountryCodeGQ captures enum value "GQ"
	CountryCodeGQ CountryCode = "GQ"

	// CountryCodeGR captures enum value "GR"
	CountryCodeGR CountryCode = "GR"

	// CountryCodeGS captures enum value "GS"
	CountryCodeGS CountryCode = "GS"

	// CountryCodeGT captures enum value "GT"
	CountryCodeGT CountryCode = "GT"

	// CountryCodeGU captures enum value "GU"
	CountryCodeGU CountryCode = "GU"

	// CountryCodeGW captures enum value "GW"
	CountryCodeGW CountryCode = "GW"

	// CountryCodeGY captures enum value "GY"
	CountryCodeGY CountryCode = "GY"

	// CountryCodeHK captures enum value "HK"
	CountryCodeHK CountryCode = "HK"

	// CountryCodeHM captures enum value "HM"
	CountryCodeHM CountryCode = "HM"

	// CountryCodeHN captures enum value "HN"
	CountryCodeHN CountryCode = "HN"

	// CountryCodeHR captures enum value "HR"
	CountryCodeHR CountryCode = "HR"

	// CountryCodeHT captures enum value "HT"
	CountryCodeHT CountryCode = "HT"

	// CountryCodeHU captures enum value "HU"
	CountryCodeHU CountryCode = "HU"

	// CountryCodeID captures enum value "ID"
	CountryCodeID CountryCode = "ID"

	// CountryCodeIE captures enum value "IE"
	CountryCodeIE CountryCode = "IE"

	// CountryCodeIL captures enum value "IL"
	CountryCodeIL CountryCode = "IL"

	// CountryCodeIM captures enum value "IM"
	CountryCodeIM CountryCode = "IM"

	// CountryCodeIN captures enum value "IN"
	CountryCodeIN CountryCode = "IN"

	// CountryCodeIO captures enum value "IO"
	CountryCodeIO CountryCode = "IO"

	// CountryCodeIQ captures enum value "IQ"
	CountryCodeIQ CountryCode = "IQ"

	// CountryCodeIR captures enum value "IR"
	CountryCodeIR CountryCode = "IR"

	// CountryCodeIS captures enum value "IS"
	CountryCodeIS CountryCode = "IS"

	// CountryCodeIT captures enum value "IT"
	CountryCodeIT CountryCode = "IT"

	// CountryCodeJE captures enum value "JE"
	CountryCodeJE CountryCode = "JE"

	// CountryCodeJM captures enum value "JM"
	CountryCodeJM CountryCode = "JM"

	// CountryCodeJO captures enum value "JO"
	CountryCodeJO CountryCode = "JO"

	// CountryCodeJP captures enum value "JP"
	CountryCodeJP CountryCode = "JP"

	// CountryCodeKE captures enum value "KE"
	CountryCodeKE CountryCode = "KE"

	// CountryCodeKG captures enum value "KG"
	CountryCodeKG CountryCode = "KG"

	// CountryCodeKH captures enum value "KH"
	CountryCodeKH CountryCode = "KH"

	// CountryCodeKI captures enum value "KI"
	CountryCodeKI CountryCode = "KI"

	// CountryCodeKM captures enum value "KM"
	CountryCodeKM CountryCode = "KM"

	// CountryCodeKN captures enum value "KN"
	CountryCodeKN CountryCode = "KN"

	// CountryCodeKP captures enum value "KP"
	CountryCodeKP CountryCode = "KP"

	// CountryCodeKR captures enum value "KR"
	CountryCodeKR CountryCode = "KR"

	// CountryCodeKW captures enum value "KW"
	CountryCodeKW CountryCode = "KW"

	// CountryCodeKY captures enum value "KY"
	CountryCodeKY CountryCode = "KY"

	// CountryCodeKZ captures enum value "KZ"
	CountryCodeKZ CountryCode = "KZ"

	// CountryCodeLA captures enum value "LA"
	CountryCodeLA CountryCode = "LA"

	// CountryCodeLB captures enum value "LB"
	CountryCodeLB CountryCode = "LB"

	// CountryCodeLC captures enum value "LC"
	CountryCodeLC CountryCode = "LC"

	// CountryCodeLI captures enum value "LI"
	CountryCodeLI CountryCode = "LI"

	// CountryCodeLK captures enum value "LK"
	CountryCodeLK CountryCode = "LK"

	// CountryCodeLR captures enum value "LR"
	CountryCodeLR CountryCode = "LR"

	// CountryCodeLS captures enum value "LS"
	CountryCodeLS CountryCode = "LS"

	// CountryCodeLT captures enum value "LT"
	CountryCodeLT CountryCode = "LT"

	// CountryCodeLU captures enum value "LU"
	CountryCodeLU CountryCode = "LU"

	// CountryCodeLV captures enum value "LV"
	CountryCodeLV CountryCode = "LV"

	// CountryCodeLY captures enum value "LY"
	CountryCodeLY CountryCode = "LY"

	// CountryCodeMA captures enum value "MA"
	CountryCodeMA CountryCode = "MA"

	// CountryCodeMC captures enum value "MC"
	CountryCodeMC CountryCode = "MC"

	// CountryCodeMD captures enum value "MD"
	CountryCodeMD CountryCode = "MD"

	// CountryCodeME captures enum value "ME"
	CountryCodeME CountryCode = "ME"

	// CountryCodeMF captures enum value "MF"
	CountryCodeMF CountryCode = "MF"

	// CountryCodeMG captures enum value "MG"
	CountryCodeMG CountryCode = "MG"

	// CountryCodeMH captures enum value "MH"
	CountryCodeMH CountryCode = "MH"

	// CountryCodeMK captures enum value "MK"
	CountryCodeMK CountryCode = "MK"

	// CountryCodeML captures enum value "ML"
	CountryCodeML CountryCode = "ML"

	// CountryCodeMM captures enum value "MM"
	CountryCodeMM CountryCode = "MM"

	// CountryCodeMN captures enum value "MN"
	CountryCodeMN CountryCode = "MN"

	// CountryCodeMO captures enum value "MO"
	CountryCodeMO CountryCode = "MO"

	// CountryCodeMP captures enum value "MP"
	CountryCodeMP CountryCode = "MP"

	// CountryCodeMQ captures enum value "MQ"
	CountryCodeMQ CountryCode = "MQ"

	// CountryCodeMR captures enum value "MR"
	CountryCodeMR CountryCode = "MR"

	// CountryCodeMS captures enum value "MS"
	CountryCodeMS CountryCode = "MS"

	// CountryCodeMT captures enum value "MT"
	CountryCodeMT CountryCode = "MT"

	// CountryCodeMU captures enum value "MU"
	CountryCodeMU CountryCode = "MU"

	// CountryCodeMV captures enum value "MV"
	CountryCodeMV CountryCode = "MV"

	// CountryCodeMW captures enum value "MW"
	CountryCodeMW CountryCode = "MW"

	// CountryCodeMX captures enum value "MX"
	CountryCodeMX CountryCode = "MX"

	// CountryCodeMY captures enum value "MY"
	CountryCodeMY CountryCode = "MY"

	// CountryCodeMZ captures enum value "MZ"
	CountryCodeMZ CountryCode = "MZ"

	// CountryCodeNA captures enum value "NA"
	CountryCodeNA CountryCode = "NA"

	// CountryCodeNC captures enum value "NC"
	CountryCodeNC CountryCode = "NC"

	// CountryCodeNE captures enum value "NE"
	CountryCodeNE CountryCode = "NE"

	// CountryCodeNF captures enum value "NF"
	CountryCodeNF CountryCode = "NF"

	// CountryCodeNG captures enum value "NG"
	CountryCodeNG CountryCode = "NG"

	// CountryCodeNI captures enum value "NI"
	CountryCodeNI CountryCode = "NI"

	// CountryCodeNL captures enum value "NL"
	CountryCodeNL CountryCode = "NL"

	// CountryCodeNO captures enum value "NO"
	CountryCodeNO CountryCode = "NO"

	// CountryCodeNP captures enum value "NP"
	CountryCodeNP CountryCode = "NP"

	// CountryCodeNR captures enum value "NR"
	CountryCodeNR CountryCode = "NR"

	// CountryCodeNU captures enum value "NU"
	CountryCodeNU CountryCode = "NU"

	// CountryCodeNZ captures enum value "NZ"
	CountryCodeNZ CountryCode = "NZ"

	// CountryCodeOM captures enum value "OM"
	CountryCodeOM CountryCode = "OM"

	// CountryCodePA captures enum value "PA"
	CountryCodePA CountryCode = "PA"

	// CountryCodePE captures enum value "PE"
	CountryCodePE CountryCode = "PE"

	// CountryCodePF captures enum value "PF"
	CountryCodePF CountryCode = "PF"

	// CountryCodePG captures enum value "PG"
	CountryCodePG CountryCode = "PG"

	// CountryCodePH captures enum value "PH"
	CountryCodePH CountryCode = "PH"

	// CountryCodePK captures enum value "PK"
	CountryCodePK CountryCode = "PK"

	// CountryCodePL captures enum value "PL"
	CountryCodePL CountryCode = "PL"

	// CountryCodePM captures enum value "PM"
	CountryCodePM CountryCode = "PM"

	// CountryCodePN captures enum value "PN"
	CountryCodePN CountryCode = "PN"

	// CountryCodePR captures enum value "PR"
	CountryCodePR CountryCode = "PR"

	// CountryCodePS captures enum value "PS"
	CountryCodePS CountryCode = "PS"

	// CountryCodePT captures enum value "PT"
	CountryCodePT CountryCode = "PT"

	// CountryCodePW captures enum value "PW"
	CountryCodePW CountryCode = "PW"

	// CountryCodePY captures enum value "PY"
	CountryCodePY CountryCode = "PY"

	// CountryCodeQA captures enum value "QA"
	CountryCodeQA CountryCode = "QA"

	// CountryCodeRE captures enum value "RE"
	CountryCodeRE CountryCode = "RE"

	// CountryCodeRO captures enum value "RO"
	CountryCodeRO CountryCode = "RO"

	// CountryCodeRS captures enum value "RS"
	CountryCodeRS CountryCode = "RS"

	// CountryCodeRU captures enum value "RU"
	CountryCodeRU CountryCode = "RU"

	// CountryCodeRW captures enum value "RW"
	CountryCodeRW CountryCode = "RW"

	// CountryCodeSA captures enum value "SA"
	CountryCodeSA CountryCode = "SA"

	// CountryCodeSB captures enum value "SB"
	CountryCodeSB CountryCode = "SB"

	// CountryCodeSC captures enum value "SC"
	CountryCodeSC CountryCode = "SC"

	// CountryCodeSD captures enum value "SD"
	CountryCodeSD CountryCode = "SD"

	// CountryCodeSE captures enum value "SE"
	CountryCodeSE CountryCode = "SE"

	// CountryCodeSG captures enum value "SG"
	CountryCodeSG CountryCode = "SG"

	// CountryCodeSH captures enum value "SH"
	CountryCodeSH CountryCode = "SH"

	// CountryCodeSI captures enum value "SI"
	CountryCodeSI CountryCode = "SI"

	// CountryCodeSJ captures enum value "SJ"
	CountryCodeSJ CountryCode = "SJ"

	// CountryCodeSK captures enum value "SK"
	CountryCodeSK CountryCode = "SK"

	// CountryCodeSL captures enum value "SL"
	CountryCodeSL CountryCode = "SL"

	// CountryCodeSM captures enum value "SM"
	CountryCodeSM CountryCode = "SM"

	// CountryCodeSN captures enum value "SN"
	CountryCodeSN CountryCode = "SN"

	// CountryCodeSO captures enum value "SO"
	CountryCodeSO CountryCode = "SO"

	// CountryCodeSR captures enum value "SR"
	CountryCodeSR CountryCode = "SR"

	// CountryCodeSS captures enum value "SS"
	CountryCodeSS CountryCode = "SS"

	// CountryCodeST captures enum value "ST"
	CountryCodeST CountryCode = "ST"

	// CountryCodeSV captures enum value "SV"
	CountryCodeSV CountryCode = "SV"

	// CountryCodeSX captures enum value "SX"
	CountryCodeSX CountryCode = "SX"

	// CountryCodeSY captures enum value "SY"
	CountryCodeSY CountryCode = "SY"

	// CountryCodeSZ captures enum value "SZ"
	CountryCodeSZ CountryCode = "SZ"

	// CountryCodeTC captures enum value "TC"
	CountryCodeTC CountryCode = "TC"

	// CountryCodeTD captures enum value "TD"
	CountryCodeTD CountryCode = "TD"

	// CountryCodeTF captures enum value "TF"
	CountryCodeTF CountryCode = "TF"

	// CountryCodeTG captures enum value "TG"
	CountryCodeTG CountryCode = "TG"

	// CountryCodeTH captures enum value "TH"
	CountryCodeTH CountryCode = "TH"

	// CountryCodeTJ captures enum value "TJ"
	CountryCodeTJ CountryCode = "TJ"

	// CountryCodeTK captures enum value "TK"
	CountryCodeTK CountryCode = "TK"

	// CountryCodeTL captures enum value "TL"
	CountryCodeTL CountryCode = "TL"

	// CountryCodeTM captures enum value "TM"
	CountryCodeTM CountryCode = "TM"

	// CountryCodeTN captures enum value "TN"
	CountryCodeTN CountryCode = "TN"

	// CountryCodeTO captures enum value "TO"
	CountryCodeTO CountryCode = "TO"

	// CountryCodeTR captures enum value "TR"
	CountryCodeTR CountryCode = "TR"

	// CountryCodeTT captures enum value "TT"
	CountryCodeTT CountryCode = "TT"

	// CountryCodeTV captures enum value "TV"
	CountryCodeTV CountryCode = "TV"

	// CountryCodeTW captures enum value "TW"
	CountryCodeTW CountryCode = "TW"

	// CountryCodeTZ captures enum value "TZ"
	CountryCodeTZ CountryCode = "TZ"

	// CountryCodeUA captures enum value "UA"
	CountryCodeUA CountryCode = "UA"

	// CountryCodeUG captures enum value "UG"
	CountryCodeUG CountryCode = "UG"

	// CountryCodeUM captures enum value "UM"
	CountryCodeUM CountryCode = "UM"

	// CountryCodeUS captures enum value "US"
	CountryCodeUS CountryCode = "US"

	// CountryCodeUY captures enum value "UY"
	CountryCodeUY CountryCode = "UY"

	// CountryCodeUZ captures enum value "UZ"
	CountryCodeUZ CountryCode = "UZ"

	// CountryCodeVA captures enum value "VA"
	CountryCodeVA CountryCode = "VA"

	// CountryCodeVC captures enum value "VC"
	CountryCodeVC CountryCode = "VC"

	// CountryCodeVE captures enum value "VE"
	CountryCodeVE CountryCode = "VE"

	// CountryCodeVG captures enum value "VG"
	CountryCodeVG CountryCode = "VG"

	// CountryCodeVI captures enum value "VI"
	CountryCodeVI CountryCode = "VI"

	// CountryCodeVN captures enum value "VN"
	CountryCodeVN CountryCode = "VN"

	// CountryCodeVU captures enum value "VU"
	CountryCodeVU CountryCode = "VU"

	// CountryCodeWF captures enum value "WF"
	CountryCodeWF CountryCode = "WF"

	// CountryCodeWS captures enum value "WS"
	CountryCodeWS CountryCode = "WS"

	// CountryCodeYE captures enum value "YE"
	CountryCodeYE CountryCode = "YE"

	// CountryCodeYT captures enum value "YT"
	CountryCodeYT CountryCode = "YT"

	// CountryCodeZA captures enum value "ZA"
	CountryCodeZA CountryCode = "ZA"

	// CountryCodeZM captures enum value "ZM"
	CountryCodeZM CountryCode = "ZM"

	// CountryCodeZW captures enum value "ZW"
	CountryCodeZW CountryCode = "ZW"
)

// for schema
var countryCodeEnum []interface{}

func init() {
	var res []CountryCode
	if err := json.Unmarshal([]byte(`["AD","AE","AF","AG","AI","AL","AM","AO","AQ","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BV","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CR","CU","CV","CW","CX","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","EH","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HM","HN","HR","HT","HU","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SV","SX","SY","SZ","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","UM","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","YE","YT","ZA","ZM","ZW"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		countryCodeEnum = append(countryCodeEnum, v)
	}
}

func (m CountryCode) validateCountryCodeEnum(path, location string, value CountryCode) error {
	if err := validate.EnumCase(path, location, value, countryCodeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this country code
func (m CountryCode) Validate(formats strfmt.Registry) error {
	var res []error

	if err := validate.MinLength("", "body", string(m), 2); err != nil {
		return err
	}

	if err := validate.MaxLength("", "body", string(m), 2); err != nil {
		return err
	}

	// value enum
	if err := m.validateCountryCodeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
