-- +goose Up {{$modelName := .CurModel}} {{$model := (index $.Models $modelName)}}
CREATE TABLE {{NameSQL $modelName}}s
({{range $j, $psqlParams := $model.Psql}}{{if not (and $psqlParams.IsArray $psqlParams.IsStruct)}}
    {{$psqlParams.SQLName}} {{$psqlParams.TypeSQL}}{{if eq $psqlParams.Name "ID"}} PRIMARY KEY{{end}}{{if $psqlParams.Unique}} UNIQUE{{end}}{{if $psqlParams.IsStruct}}  REFERENCES {{NameSQL $psqlParams.Type}}s({{$psqlParams.FK}}){{end}},{{end}}{{end}}
    deleted boolean NOT NULL DEFAULT false,
    deleted_at TIMESTAMP,
    deleted_by uuid{{if not $model.Shared}},
    isolated_entity_id uuid NOT NULL{{end}}
);
CREATE TABLE {{NameSQL $modelName}}s_access 
(
    user_name text,
    group_name text,
    read_access boolean,
    write_access boolean,
    delete_access boolean,
    add_access boolean, 
    access_manager boolean
);
{{range $i, $et := $.ExtraTables}}{{if eq $et.RefTableOne $modelName}}
CREATE TABLE {{$et.Name}}
(
    {{$et.FieldIDOne}} {{$et.TypeIDOne}} NOT NULL REFERENCES {{NameSQL $et.RefTableOne}}s({{$et.RefIDOne}}),
    {{$et.FieldIDTwo}} {{$et.TypeIDTwo}} NOT NULL REFERENCES {{NameSQL $et.RefTableTwo}}s({{$et.RefIDTwo}}){{if not $model.Shared}},
    isolated_entity_id uuid NOT NULL{{end}}
);{{end}}{{end}}


-- +goose Down{{range $i, $et := $.ExtraTables}}{{if eq $et.RefTableOne $modelName}}
DROP TABLE IF EXISTS {{$et.Name}};{{end}}{{end}}
DROP TABLE IF EXISTS {{NameSQL $modelName}}s;
DROP TABLE IF EXISTS {{NameSQL $modelName}}s_access;