{{- $modelName := .CurModel}}
{{- $model := (index $.Models $modelName)}}
-- +goose Up
CREATE TABLE {{Pluralize (NameSQL $modelName)}}
({{range $j, $psqlParams := $model.Psql}}{{if not (and $psqlParams.IsArray $psqlParams.IsStruct)}}
    {{$psqlParams.SQLName}} {{$psqlParams.TypeSQL}}{{if $psqlParams.NotNull}} NOT NULL{{end}}{{if eq $psqlParams.Name "ID"}} PRIMARY KEY{{end}}{{if $psqlParams.Unique}} UNIQUE{{end}}{{if $psqlParams.IsStruct}}  REFERENCES {{Pluralize (NameSQL $psqlParams.Type)}}({{$psqlParams.FK}}){{end}},{{end}}{{end}}
    {{- if not $model.HaveCreatedBy}}
    created_by uuid NOT NULL,
    {{- end}}
    bound boolean NOT NULL DEFAULT false,
    deleted boolean NOT NULL DEFAULT false,
    deleted_at TIMESTAMP,
    deleted_by uuid{{if not $model.Shared}},
    isolated_entity_id uuid NOT NULL{{end}}
);
{{range $i, $et := $.ExtraTables}}{{if eq $et.RefTableOne $modelName}}
CREATE TABLE {{$et.Name}}
(
    {{$et.FieldIDOne}} {{$et.TypeIDOne}} NOT NULL REFERENCES {{Pluralize (NameSQL $et.RefTableOne)}}({{$et.RefIDOne}}),
    {{$et.FieldIDTwo}} {{$et.TypeIDTwo}} NOT NULL REFERENCES {{Pluralize (NameSQL $et.RefTableTwo)}}({{$et.RefIDTwo}}){{if not $model.Shared}},
    isolated_entity_id uuid NOT NULL{{end}}
);{{end}}{{end}}

-- +goose Down{{range $i, $et := $.ExtraTables}}{{if eq $et.RefTableOne $modelName}}
DROP TABLE IF EXISTS {{$et.Name}};{{end}}{{end}}
DROP TABLE IF EXISTS {{Pluralize (NameSQL $modelName)}};