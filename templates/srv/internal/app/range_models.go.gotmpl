// Code generated by mtgroup-generator. {{$modelName := .CurModel}} {{$model := (index $.Models $modelName)}}
package app

// Make sure not to overwrite this file after you generated it because all your edits would be lost!
type {{$modelName}} struct { {{range $name, $options := $model.Columns}}
	{{$options.TitleName}} {{if $options.IsArray}}[]{{end}}{{if $options.IsStruct}}*{{end}}{{$options.GoType}} {{end}}
}

{{- range $i, $method := $model.Methods}}
{{- if not (IsCustomMethod $method)}}
	{{- if IsGet $method}}
		func (a *app) {{$method}}{{$modelName}}(id {{if $model.IDIsUUID}}string{{else}}int64{{end}}{{if not $model.Shared}}, isolatedEntityID string{{end}}) (*{{$modelName}}, error) {
			return a.appl.{{$method}}{{$modelName}}(id{{if not $model.Shared}}, isolatedEntityID{{end}})
		}
	{{- end}}
	{{- if IsAdd $method}}
		func (a *app) {{$method}}{{$modelName}}({{if or (IsMyMethod $method) $model.HaveCreatedBy}}id string, {{end}}{{if not $model.Shared}}isolatedEntityID string, {{end}}m *{{$modelName}}) (*{{$modelName}}, error) {
			return a.appl.{{$method}}{{$modelName}}({{if or (IsMyMethod $method) $model.HaveCreatedBy}}id, {{end}}{{if not $model.Shared}}isolatedEntityID, {{end}}m)
		}
	{{- end}}
	{{- if IsDelete $method}}
		func (a *app) {{$method}}{{$modelName}}(id {{if $model.IDIsUUID}}string{{else}}int64{{end}}{{if not $model.Shared}}, isolatedEntityID string{{end}}) error {
			return a.appl.{{$method}}{{$modelName}}(id{{if not $model.Shared}}, isolatedEntityID{{end}})
		}
	{{- end}}
	{{- if IsEdit $method}}
		func (a *app) {{$method}}{{$modelName}}(id {{if $model.IDIsUUID}}string{{else}}int64{{end}}, {{if $model.HaveModifiedBy}}profID string, {{end}}{{if not $model.Shared}}isolatedEntityID string, {{end}}m *{{$modelName}}) {{if $model.ReturnWhenEdit}}(*{{$modelName}}, error){{else}}error{{end}} {
			return a.appl.{{$method}}{{$modelName}}(id, {{if $model.HaveModifiedBy}}profID, {{end}}{{if not $model.Shared}}isolatedEntityID, {{end}}m)
		}
	{{- end}}
	{{- if IsList $method}}
		func (a *app) {{$method}}{{$modelName}}({{if not $model.Shared}}isolatedEntityID string, {{end}}offset, limit int64, filters []*Filter, logicFilter bool, sortBy, orderBy string) ([]*{{$modelName}}, {{if $model.DetailedPagination}}int, {{end}}[]string, error) {
			return a.appl.{{$method}}{{$modelName}}({{if not $model.Shared}}isolatedEntityID, {{end}}offset, limit, filters, logicFilter, sortBy, orderBy)
		}
	{{- end}}
{{- end}}
{{- end}}
{{range $column, $options := $model.Columns}} {{if  and $options.IsArray $options.IsStruct}}
func (a *app) Add{{Title $column}}{{$modelName}}(id {{if $model.IDIsUUID}}string{{else}}int64{{end}}, {{if $model.HaveModifiedBy}}profileID string, {{end}}{{if not $model.Shared}}isolatedEntityID string, {{end}}itemsID []{{if (index $.Models $options.GoType).IDIsUUID}}string{{else}}int64{{end}}, items []*{{$options.GoType}}) error {
	return a.appl.Add{{Title $column}}{{$modelName}}(id, {{if $model.HaveModifiedBy}}profileID, {{end}}{{if not $model.Shared}}isolatedEntityID, {{end}}itemsID, items)
}

func (a *app) Delete{{Title $column}}{{$modelName}}(id {{if $model.IDIsUUID}}string{{else}}int64{{end}}, {{if $model.HaveModifiedBy}}profileID string, {{end}}{{if not $model.Shared}}isolatedEntityID string, {{end}}items []{{if (index $.Models $options.GoType).IDIsUUID}}string{{else}}int64{{end}}) error {
	return a.appl.Delete{{Title $column}}{{$modelName}}(id, {{if $model.HaveModifiedBy}}profileID, {{end}}{{if not $model.Shared}}isolatedEntityID, {{end}}items)
}
{{end}}{{end}}
func (a *app) {{$modelName}}AccessManager(m *AccessManager) error {
	return a.appl.{{$modelName}}AccessManager(m)
}

{{range $functionName, $function := $.Functions}}
func (a *app) {{$functionName}}{{$modelName}}({{$function.InStrFull}}) ({{$function.OutStrType}}, error) {
	return a.appl.{{$functionName}}{{$modelName}}({{$function.InStr}})
}{{end}}

