// Code generated by mtgroup-generator. {{$modelName := .CurModel}} {{$model := (index $.Models $modelName)}}
package app

// Make sure not to overwrite this file after you generated it because all your edits would be lost!
type {{$modelName}} struct { {{range $name, $options := $model.Columns}}
	{{$options.TitleName}} {{if $options.IsArray}}[]{{end}}{{if $options.IsStruct}}*{{end}}{{$options.GoType}} {{end}}
}

{{range $i, $method := $model.Methods}}{{if not (IsCustomMethod $method)}}
{{if eq $method "Get"}}func (a *app) {{$method}}{{$modelName}}(id {{if $model.IDIsUUID}}string{{else}}int64{{end}}) (*{{$modelName}}, error) {
	return a.appl.{{$method}}{{$modelName}}(id)
}{{end}}
{{if eq $method "Add"}}func (a *app) {{$method}}{{$modelName}}({{if $model.IDFromProfile}}profID string, {{end}}m *{{$modelName}}) (*{{$modelName}}, error) {
	return a.appl.{{$method}}{{$modelName}}({{if $model.IDFromProfile}}profID, {{end}}m)
}{{end}}
{{if eq $method "Delete"}}func (a *app) {{$method}}{{$modelName}}(id {{if $model.IDIsUUID}}string{{else}}int64{{end}}) error {
	return a.appl.{{$method}}{{$modelName}}(id)
}{{end}}
{{if or (eq $method "Edit") (IsCustomEdit $method)}}func (a *app) {{$method}}{{$modelName}}(id {{if $model.IDIsUUID}}string{{else}}int64{{end}}, m *{{$modelName}}) {{if $model.ReturnWhenEdit}}(*{{$modelName}}, error){{else}}error{{end}} {
	return a.appl.{{$method}}{{$modelName}}(id, m)
}{{end}}
{{if or (eq $method "List") (IsCustomList $method)}}func (a *app) {{$method}}{{$modelName}}(offset, limit int64, filters []*Filter, sortBy, orderBy string) ([]*{{$modelName}}, {{if $model.DetailedPagination}}int, {{end}}[]string, error) {
	return a.appl.{{$method}}{{$modelName}}(offset, limit, filters, sortBy, orderBy)
}{{end}}
{{end}}{{end}}
{{range $column, $options := $model.Columns}} {{if $options.IsArray}}
func (a *app) Add{{Title $column}}{{$modelName}}(id {{if $model.IDIsUUID}}string{{else}}int64{{end}}, itemsID []{{if (index $.Models $options.GoType).IDIsUUID}}string{{else}}int64{{end}}, items []*{{$options.GoType}}) error {
	return a.appl.Add{{Title $column}}{{$modelName}}(id, itemsID, items)
}

func (a *app) Delete{{Title $column}}{{$modelName}}(id {{if $model.IDIsUUID}}string{{else}}int64{{end}}, items []{{if (index $.Models $options.GoType).IDIsUUID}}string{{else}}int64{{end}}) error {
	return a.appl.Delete{{Title $column}}{{$modelName}}(id, items)
}
{{end}}{{end}}
func (a *app) {{$modelName}}AccessManager(m *AccessManager) error {
	return a.appl.{{$modelName}}AccessManager(m)
}

{{range $functionName, $function := $.Functions}}
func (a *app) {{$functionName}}{{$modelName}}({{$function.InStrFull}}) ({{$function.OutStrType}}, error) {
	return a.appl.{{$functionName}}{{$modelName}}({{$function.InStr}})
}{{end}}

