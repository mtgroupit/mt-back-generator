// Code generated by mtgroup-generator. {{$modelName := .CurModel}} {{$model := (index $.Models $modelName)}}
package app

import (
	"testing"

	"github.com/golang/mock/gomock"
	"github.com/powerman/check"
)

// Make sure not to overwrite this file after you generated it because all your edits would be lost!

{{range $i, $method := $model.Methods}}
func Test{{$method}}{{$modelName}}(tt *testing.T) {
	t := check.T(tt)
	t.Parallel()
	ctrl := gomock.NewController(t)
	defer ctrl.Finish()

	mockApp := NewMockApp(ctrl)

	a := New(mockApp)

	{{if eq $method "Get"}}mockApp.EXPECT().{{$method}}{{$modelName}}(gomock.Any()).Return(test{{$modelName}}1, nil)
	b, err := a.{{$method}}{{$modelName}}(test{{$modelName}}1.ID)
	t.Nil(err)
	t.DeepEqual(test{{$modelName}}1, b){{end}}
	{{if eq $method "Add"}}mockApp.EXPECT().{{$method}}{{$modelName}}(gomock.Any()).Return(nil)
	err := a.{{$method}}{{$modelName}}(test{{$modelName}}1)
	t.Nil(err){{end}}
	{{if eq $method "Delete"}}mockApp.EXPECT().{{$method}}{{$modelName}}(gomock.Any()).Return(nil)
	err := a.{{$method}}{{$modelName}}(test{{$modelName}}1.ID)
	t.Nil(err){{end}}
	{{if eq $method "Edit"}}mockApp.EXPECT().{{$method}}{{$modelName}}(gomock.Any(), gomock.Any()).Return(nil)
	err := a.{{$method}}{{$modelName}}(test{{$modelName}}1.ID, test{{$modelName}}1)
	t.Nil(err){{end}}

	{{if or (eq $method "List") (IsCustomList $method)}}mockApp.EXPECT().{{$method}}{{$modelName}}(gomock.Any(), gomock.Any(), gomock.Any()).Return(test{{$modelName}}s, nil)
	b, err := a.{{$method}}{{$modelName}}(offset, limit, []*Filter{})
	t.Nil(err)
	t.DeepEqual(test{{$modelName}}s, b){{end}}
	{{if and (ne $method "Get") (ne $method "Add") (ne $method "Delete") (ne $method "Edit") (ne $method "List") (not (IsCustomList $method))}}
	mockApp.EXPECT().{{$method}}{{$modelName}}(gomock.Any()).Return(nil)
	err := a.{{$method}}{{$modelName}}(test{{$modelName}}1)
	t.Nil(err){{end}}
}
{{end}}