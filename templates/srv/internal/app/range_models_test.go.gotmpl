// Code generated by mtgroup-generator. {{$modelName := .CurModel}}{{$haveCustomMethod := .HaveCustomMethod}} {{$model := (index $.Models $modelName)}}
package app

import (
	"testing"

	"github.com/golang/mock/gomock"
	"github.com/powerman/check"
)

// Make sure not to overwrite this file after you generated it because all your edits would be lost!

{{range $i, $method := $model.Methods}}{{if not (IsCustomMethod $method)}}
func Test{{$method}}{{$modelName}}(tt *testing.T) {
	t := check.T(tt)
	t.Parallel()
	ctrl := gomock.NewController(t)
	defer ctrl.Finish()

	mockRepo := NewMockRepo(ctrl)
	{{- if $haveCustomMethod}}
	mockCustRepo := NewMockCustomsRepo(ctrl)
	{{- end}}
	rulesSet := NewMockRulesSet(ctrl)

	a{{if $haveCustomMethod}}, _{{end}} := New(mockRepo{{if $haveCustomMethod}}, mockCustRepo{{end}}, rulesSet)

	rulesSet.EXPECT().{{$method}}{{$modelName}}AccessManager(gomock.Any()).Return(true)

	{{- if IsGet $method}} 
		mockRepo.EXPECT().{{$method}}{{$modelName}}({{if not $model.BoundToIsolatedEntity}}gomock.Any(){{end}}{{if not $model.Shared}}{{if not $model.BoundToIsolatedEntity}}, {{end}}gomock.Any(){{end}}).Return(test{{$modelName}}1, nil)
		b, err := a.{{$method}}{{$modelName}}(profile{{if (index $model.MethodsProps $i).NoSecure}}UnAuth{{end}}{{if not (IsMyMethod $method)}}, test{{$modelName}}1.ID{{end}})
		t.Nil(err)
		t.DeepEqual(test{{$modelName}}1, b)
	{{- end}}
	{{- if IsAdd $method}}
		mockRepo.EXPECT().{{$method}}{{$modelName}}(gomock.Any(), {{if not $model.Shared}}gomock.Any(), {{end}}gomock.Any()).Return(test{{$modelName}}1, nil)
		b, err := a.{{$method}}{{$modelName}}(profile{{if (index $model.MethodsProps $i).NoSecure}}UnAuth{{end}}, test{{$modelName}}1)
		t.Nil(err)
		t.DeepEqual(test{{$modelName}}1, b)
	{{- end}}
	{{- if IsDelete $method}}
		mockRepo.EXPECT().{{$method}}{{$modelName}}({{if not (IsMyMethod $method)}}gomock.Any(), {{end}}gomock.Any(){{if not $model.Shared}}, gomock.Any(){{end}}).Return(nil)
		err := a.{{$method}}{{$modelName}}(profile{{if (index $model.MethodsProps $i).NoSecure}}UnAuth{{end}}{{if not (IsMyMethod $method)}}, test{{$modelName}}1.ID{{end}})
		t.Nil(err)
	{{- end}}
	{{- if IsEdit $method}}
		mockRepo.EXPECT().{{$method}}{{$modelName}}({{if not (IsMyMethod $method)}}gomock.Any(), {{end}}{{if or (and (IsMyMethod $method) (not $model.BoundToIsolatedEntity)) $model.HaveModifiedBy}}gomock.Any(), {{end}}{{if not $model.Shared}}gomock.Any(), {{end}}gomock.Any()).Return({{if $model.ReturnWhenEdit}}test{{$modelName}}2, {{end}}nil)
		{{if $model.ReturnWhenEdit}}b, {{end}}err := a.{{$method}}{{$modelName}}(profile{{if (index $model.MethodsProps $i).NoSecure}}UnAuth{{end}}, {{if not (IsMyMethod $method)}}test{{$modelName}}1.ID, {{end}}test{{$modelName}}1)
		t.Nil(err)
		{{- if $model.ReturnWhenEdit}}
			t.DeepEqual(test{{$modelName}}2, b)
		{{- end}}
	{{- end}}
	{{- if IsList $method}}
		mockRepo.EXPECT().{{$method}}{{$modelName}}({{if not $model.Shared}}gomock.Any(), {{end}}gomock.Any()).Return(test{{$modelName}}s, {{if $model.DetailedPagination}}2, {{end}}[]string{}, nil)
		b, {{if $model.DetailedPagination}}count, {{end}}_, err := a.{{$method}}{{$modelName}}(profile{{if (index $model.MethodsProps $i).NoSecure}}UnAuth{{end}}, listParams)
		t.Nil(err)
		{{- if $model.DetailedPagination}}
		t.Equal(2, count)
		{{- end}}
		t.DeepEqual(test{{$modelName}}s, b)
	{{- end}}
}
{{end}}{{end}}