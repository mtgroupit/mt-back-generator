// Code generated by mtgroup-generator.
package app

// Make sure not to overwrite this file after you generated it because all your edits would be lost!

// App provides application features service.
type App interface {
{{- range $modelName, $model := $.Models}}
    {{- range $i, $method := $model.Methods}}
	    {{- if IsGet $method}}
            {{$method}}{{$modelName}}({{if not $model.BoundToIsolatedEntity}}id {{if $model.IDIsUUID}}string{{else}}int64{{end}}{{end}}{{if not $model.Shared}}{{if not $model.BoundToIsolatedEntity}}, {{end}}isolatedEntityID string{{end}}) (*{{$modelName}}, error)
        {{- end}}
        {{- if IsAdd $method}}
            {{$method}}{{$modelName}}(profileID string, {{if not $model.Shared}}isolatedEntityID string, {{end}}m *{{$modelName}}) (*{{$modelName}}, error)
        {{- end}}
	    {{- if IsDelete $method}}
            {{$method}}{{$modelName}}({{if not (IsMyMethod $method)}}id {{if $model.IDIsUUID}}string{{else}}int64{{end}}, {{end}}profileID string{{if not $model.Shared}}, isolatedEntityID string{{end}}) error
        {{- end}}
        {{- if IsEdit $method}}
            {{$method}}{{$modelName}}({{if not (IsMyMethod $method)}}id {{if $model.IDIsUUID}}string{{else}}int64{{end}}, {{end}}{{if or (and (IsMyMethod $method) (not $model.BoundToIsolatedEntity)) $model.HaveModifiedBy}}profileID string, {{end}}{{if not $model.Shared}}isolatedEntityID string, {{end}}m *{{$modelName}}) {{if $model.ReturnWhenEdit}}(*{{$modelName}}, error){{else}}error{{end}}
        {{- end}}
        {{- if IsList $method}}
            {{$method}}{{$modelName}}({{if not $model.Shared}}isolatedEntityID string, {{end}}offset, limit int64, filters []*Filter, logicFilter bool, sortBy, orderBy string) ([]*{{$modelName}}, {{if $model.DetailedPagination}}int, {{end}}[]string, error)
        {{- end}}
    {{- end}}
	{{range $column, $options := $model.Columns}}{{if  and $options.IsArray $options.IsStruct}}
    Add{{Title $column}}{{$modelName}}(id {{if $model.IDIsUUID}}string{{else}}int64{{end}}, {{if $model.HaveModifiedBy}}profileID string, {{end}}{{if not $model.Shared}}isolatedEntityID string, {{end}}itemsID []{{if (index $.Models $options.GoType).IDIsUUID}}string{{else}}int64{{end}}, items []*{{$options.GoType}}) error
    Delete{{Title $column}}{{$modelName}}(id {{if $model.IDIsUUID}}string{{else}}int64{{end}}, {{if $model.HaveModifiedBy}}profileID string, {{end}}{{if not $model.Shared}}isolatedEntityID string, {{end}}items []{{if (index $.Models $options.GoType).IDIsUUID}}string{{else}}int64{{end}}) error{{end}}{{end}}
    {{$modelName}}AccessManager(m *AccessManager) error
{{- end}}

    {{range $modelName, $model := $.Models}}{{range $functionName, $function := $.Functions}}
	{{$functionName}}{{$modelName}}({{$function.InStrFull}}) ({{$function.InStrType}}, error)
    {{end}}{{end}}
}

// Repo interface for data repository
type Repo interface {
{{- range $modelName, $model := $.Models}}
    {{- range $i, $method := $model.Methods}}
	    {{- if IsGet $method}}
            {{$method}}{{$modelName}}({{if not $model.BoundToIsolatedEntity}}id {{if $model.IDIsUUID}}string{{else}}int64{{end}}{{end}}{{if not $model.Shared}}{{if not $model.BoundToIsolatedEntity}}, {{end}}isolatedEntityID string{{end}}) (*{{$modelName}}, error)
        {{- end}}
        {{- if IsAdd $method}}
            {{$method}}{{$modelName}}(profileID string, {{if not $model.Shared}}isolatedEntityID string, {{end}}m *{{$modelName}}) (*{{$modelName}}, error)
        {{- end}}
	    {{- if IsDelete $method}}
            {{$method}}{{$modelName}}({{if not (IsMyMethod $method)}}id {{if $model.IDIsUUID}}string{{else}}int64{{end}}, {{end}}profileID string{{if not $model.Shared}}, isolatedEntityID string{{end}}) error
        {{- end}}
        {{- if IsEdit $method}}
            {{$method}}{{$modelName}}({{if not (IsMyMethod $method)}}id {{if $model.IDIsUUID}}string{{else}}int64{{end}}, {{end}}{{if or (and (IsMyMethod $method) (not $model.BoundToIsolatedEntity)) $model.HaveModifiedBy}}profileID string, {{end}}{{if not $model.Shared}}isolatedEntityID string, {{end}}m *{{$modelName}}) {{if $model.ReturnWhenEdit}}(*{{$modelName}}, error){{else}}error{{end}}
        {{- end}}
        {{- if IsList $method}}
            {{$method}}{{$modelName}}({{if not $model.Shared}}isolatedEntityID string, {{end}}offset, limit int64, filters []*Filter, logicFilter bool, sortBy, orderBy string) ([]*{{$modelName}}, {{if $model.DetailedPagination}}int, {{end}}[]string, error)
        {{- end}}
    {{- end}}
	{{range $column, $options := $model.Columns}}{{if  and $options.IsArray $options.IsStruct}}
    Add{{Title $column}}{{$modelName}}(id {{if $model.IDIsUUID}}string{{else}}int64{{end}}, {{if $model.HaveModifiedBy}}profileID string, {{end}}{{if not $model.Shared}}isolatedEntityID string, {{end}}itemsID []{{if (index $.Models $options.GoType).IDIsUUID}}string{{else}}int64{{end}}, items []*{{$options.GoType}}) error
    Delete{{Title $column}}{{$modelName}}(id {{if $model.IDIsUUID}}string{{else}}int64{{end}}, {{if $model.HaveModifiedBy}}profileID string, {{end}}{{if not $model.Shared}}isolatedEntityID string, {{end}}items []{{if (index $.Models $options.GoType).IDIsUUID}}string{{else}}int64{{end}}) error{{end}}{{end}}
    {{$modelName}}AccessManager(m *AccessManager) error
{{- end}}

    {{range $modelName, $model := $.Models}}{{range $functionName, $function := $.Functions}}
	{{$functionName}}{{$modelName}}({{$function.InStrFull}}) ({{$function.InStrType}}, error)
    {{end}}{{end}}
}

type AccessManager struct {
    User string
    Group string
    Read bool
    Write bool
    Delete bool
    Add bool 
    AccessManager bool
}

type Filter struct {
	Key     string
	Include bool
	Value   string
}

type app struct {
	repo     Repo
    custRepo CustomsRepo
}

func New(r Repo, cr CustomsRepo) (App, Customs) {
	return &app{
		repo: r,
	}, &app{
		repo: r,
        custRepo: cr,
	}
}