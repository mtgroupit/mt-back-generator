{{- $modelName := .CurModel}}
{{- $model := (index $.Models $modelName)}}
{{- $models := .Models}}
// Code generated by mtgroup-generator.
package dal

// Make sure not to overwrite this file after you generated it because all your edits would be lost!

const (

	sqlGet{{$modelName}} = `
	SELECT
		{{$model.SQLSelectStr}}
	FROM
		{{NameSQL $modelName}}s
	WHERE
		id=$1 AND
		{{- if not $model.Shared}}
		isolated_entity_id=$2 AND
		{{- end}}
		NOT deleted
	`

	sqlGetMy{{$modelName}}ID = `
	SELECT
		id
	FROM
		{{NameSQL $modelName}}s
	WHERE
		{{if not $model.BoundToIsolatedEntity}}created_by=$1{{end}}{{if not $model.Shared}}{{if not $model.BoundToIsolatedEntity}} AND
		{{end}}isolated_entity_id=${{if $model.BoundToIsolatedEntity}}1{{else}}2{{end}}{{end}} AND
		NOT deleted AND
		bound
	`

	{{- range $i, $method := $model.Methods}}
		{{- if IsAdjustGet $method}}
			sql{{$method}}{{$modelName}} = `
	SELECT
		{{(index $model.MethodsProps $i).AdjustSQLSelect}}
	FROM
		{{NameSQL $modelName}}s
	WHERE
		id=$1 AND
		{{- if not $model.Shared}}
		isolated_entity_id=$2 AND
		{{- end}}
		NOT deleted
	`
		{{- end}}
	{{- end}}


	sqlAdd{{$modelName}} = `
	INSERT INTO {{NameSQL $modelName}}s{{$model.SQLAddStr}}
	RETURNING
		id
	`

	{{- range $modelName2, $model2 := $.Models}}
		{{- range $column, $options := $model.Columns}}
			{{- if eq $modelName2 $options.GoType}}
				{{- if and $options.IsArray $options.IsStruct}}
						sqlAddTo{{Title $column}}In{{$modelName}} = `
	INSERT INTO {{NameSQL $modelName}}_{{NameSQL $column}}(
		{{NameSQL $modelName}}_id,
		{{NameSQL $column}}_id
		{{- if not $model.Shared}},
		isolated_entity_id
		{{- end}}
		)
	VALUES (
		$1,
		$2
		{{- if not $model.Shared}},
		$3
		{{- end}}
	)
	`
				{{- end}}
			{{- end}}
		{{- end}}
	{{- end}}

	sqlBind{{$modelName}}To{{if $model.BoundToIsolatedEntity}}IsolatedEntity{{else}}Profile{{end}} = `
	UPDATE
		{{NameSQL $modelName}}s
	SET
		bound=true
	WHERE
		id=$1 AND
		{{- if not $model.BoundToIsolatedEntity}}
		created_by=$2 AND
		{{- end}}
		{{- if not $model.Shared}}
		isolated_entity_id=${{if $model.BoundToIsolatedEntity}}2{{else}}3{{end}} AND
		{{- end}}
		NOT deleted AND
		NOT bound
	`

	sqlDelete{{$modelName}} = `
	UPDATE
		{{NameSQL $modelName}}s
	SET
		deleted=true,
		deleted_at=$2,
		deleted_by=$3
	WHERE
		id=$1 AND
		{{- if not $model.Shared}}
		isolated_entity_id=$4 AND
		{{- end}}
		NOT deleted
	`

	sqlEdit{{$modelName}} = `
	UPDATE
		{{NameSQL $modelName}}s
	SET
		{{$model.SQLEditStr}}
	WHERE
		id=$1 AND
		{{- if not $model.Shared}}
		isolated_entity_id=$2 AND
		{{- end}}
		NOT deleted
	`


	{{- if or $model.HaveModifiedAt $model.HaveModifiedBy}}
		{{- $countParams := 2}}
		{{- if not $model.Shared}}
			{{- $countParams = 3}}
		{{- end}}
		sqlSetModifiedParams{{$modelName}} = `
	UPDATE
		{{NameSQL $modelName}}s
	SET
		{{if $model.HaveModifiedAt}}modified_at=${{$countParams}}{{$countParams = 4}}{{end}}{{if $model.HaveModifiedBy}}modified_by=${{$countParams}}{{end}}
	WHERE
		id=$1
		{{- if not $model.Shared}} AND
		isolated_entity_id=$2
		{{- end}}
	`
	{{- end}}

	{{- range $i, $method := $model.Methods}}
		{{- if IsAdjustEdit $method}}
			sql{{$method}}{{$modelName}} = `
	UPDATE
		{{NameSQL $modelName}}s
	SET
		{{(index $model.MethodsProps $i).CustomSQLEditStr}}
	WHERE
		id=$1 AND
		{{- if not $model.Shared}}
		isolated_entity_id=$2 AND
		{{- end}}
		NOT deleted
	`
		{{- end}}
	{{- end}}
	
	sqlList{{$modelName}} = `
	SELECT
		{{$model.SQLSelectStr}}
	FROM
		{{NameSQL $modelName}}s
	WHERE
		{{$model.SQLWhereParams}}{{if $model.SQLWhereParams}} AND{{end}}
		{{- if not $model.Shared}}
		isolated_entity_id=:isolated_entity_id AND
		{{- end}}
		NOT deleted
	`

	{{- range $i, $method := $model.Methods}}
		{{- if IsAdjustList $method}}
			sql{{$method}}{{$modelName}} = `
	SELECT
		{{(index $model.MethodsProps $i).AdjustSQLSelect}}
	FROM
		{{NameSQL $modelName}}s
	{{if (index $model.MethodsProps $i).FilteredFields}}WHERE
		{{end}}{{(index $model.MethodsProps $i).AdjustListSQLWhereProps}} {{if not $model.Shared}}{{if (index $model.MethodsProps $i).FilteredFields}}AND{{else}}WHERE{{end}}
		isolated_entity_id=:isolated_entity_id{{end}} AND
		NOT deleted
	`
			{{if (index $model.MethodsProps $i).NeedLazyLoading}}
				{{- range $j, $nestedObj := (index $model.MethodsProps $i).NestedObjs}}
					{{- $model2 := (index $.Models $nestedObj.Type)}}
						sqlGet{{$nestedObj.Name}}For{{$method}} = `
	SELECT
		{{$nestedObj.SQLSelect}}
	FROM
		{{NameSQL $nestedObj.Type}}s
	WHERE
		id=$1{{if not $model2.Shared}} AND
		isolated_entity_id=$2{{end}}
	`
				{{- end}}
			{{end}}
		{{- end}}
	{{- end}}

	{{- if $model.HaveLazyLoading}}
		{{- range $modelName2, $model2 := $.Models}}
			{{- range $column, $options := $model.Columns}}
				{{- if eq $modelName2 $options.GoType}}
					{{- if and $options.IsArray $options.IsStruct}}
						sqlGet{{Title $column}}IDsFor{{$modelName}}LazyLoading = `
	SELECT
		{{NameSQL $modelName}}_id,
		{{NameSQL $options.TitleName}}_id
	FROM
		{{NameSQL $modelName}}_{{NameSQL $options.TitleName}}
	WHERE
		{{NameSQL $modelName}}_id=$1{{if not $model2.Shared}} AND
		isolated_entity_id=$2{{end}}
	`
					{{- end}}
					sqlGet{{Title $column}}For{{$modelName}}LazyLoading = `
	SELECT
		{{$model2.SQLSelectStr}}
	FROM
		{{NameSQL $modelName2}}s
	WHERE
		id=$1{{if not $model2.Shared}} AND
		isolated_entity_id=$2{{end}}
	`
				{{- end}}
			{{end}}
		{{- end}}
	{{- end}}

	{{- range $column, $options := $model.Columns}}
		{{- if  and $options.IsArray $options.IsStruct}}
			sqlDeleteFrom{{Title $column}}In{{$modelName}} = `
	DELETE FROM
		{{NameSQL $modelName}}_{{NameSQL $column}}
	WHERE
		{{NameSQL $modelName}}_id=$1 AND
		{{NameSQL $column}}_id=$2
		{{- if not $model.Shared}} AND
		isolated_entity_id=$2
		{{- end}}
	`
		{{- end}}
	{{- end}}
	
)