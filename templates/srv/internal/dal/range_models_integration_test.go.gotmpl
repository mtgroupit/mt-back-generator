// +build integration {{$modelName := .CurModel}} {{$model := (index $.Models $modelName)}}

package dal

import (
	"testing"

	"github.com/powerman/check"
)

{{- range $i, $method := $model.Methods}}
{{- if not (IsCustomMethod $method)}}
func Test{{$method}}{{$modelName}}Smoke(tt *testing.T) {
	t := check.T(tt)

	addTestData(t)

	{{- if IsGet $method}}
		getted, err := testRepo.{{$method}}{{$modelName}}(test{{$modelName}}1.ID{{if not $model.Shared}}, isolatedEntityID{{end}})
		t.Nil(err)
		t.DeepEqual(getted, test{{$modelName}}1)
	{{- end}}
	{{- if IsDelete $method}}
		t.Nil(testRepo.{{$method}}{{$modelName}}(test{{$modelName}}1.ID{{if not $model.Shared}}, isolatedEntityID{{end}}))
	{{- end}}
	{{- if IsEdit $method}}
		addTestData(t)
		t.Nil(testRepo.{{$method}}{{$modelName}}(test{{$modelName}}1.ID, {{if $model.HaveModifiedBy}}profID, {{end}}{{if not $model.Shared}}isolatedEntityID, {{end}}test{{$modelName}}{{if $model.BoundToIsolatedEntity}}1{{else}}2{{end}}))
	{{- end}}

	{{- if IsList $method}}	
		filters[0].Value = test{{$modelName}}1.ID
		filters[1].Value = test{{$modelName}}2.ID

		list, {{if $model.DetailedPagination}}_, {{end}}_,  err := testRepo.{{$method}}{{$modelName}}({{if not $model.Shared}}isolatedEntityID, {{end}}offset, limit, filters, logicFilter, sortBy, orderBy)
		t.Nil(err)
		t.DeepEqual(list, test{{$modelName}}s)
	{{- end}}
	{{/* {{if and (ne $method "Get") (ne $method "Add") (ne $method "Delete") (ne $method "Edit") (ne $method "List") (not (IsAdjustList $method))}}
	t.Nil(testRepo.{{$method}}{{$modelName}}(test{{$modelName}}1)){{end}} */}}

	t.Nil(testRepo.truncate())
}
{{- end}}
{{- end}}