swagger: "2.0"
info:
  description: {{ .Description }}
  title: {{.Name}}
  version: 1.0.0
consumes:
  - application/json
produces:
  - application/json
schemes:
  - http
securityDefinitions:
  cookieKey:
    description: Session token inside cookie.
    type: apiKey
    in: header
    name: Cookie
  csrfToken:
    description: Token for CSRF protection (tied to session token).
    type: apiKey
    in: header
    name: X-CSRFTokenBound
security:
  - cookieKey: []
  - cookieKey: []
    csrfToken: []
paths:  {{range $modelName, $model := $.Models}}  {{range $i, $method := $model.Methods}}
  /{{LowerTitle $modelName}}/{{LowerTitle $method}}:    
    {{(index $model.MethodsProps $i).HTTPMethod}}: {{if $model.Tags}}
      tags:{{range $_, $tag := $model.Tags}}
        - {{$tag}}{{end}}{{end}}
      operationId: {{LowerTitle $method}}{{$model.TitleName}} {{if not (and (or (eq $method "Get") (eq $method "Delete")) ($model.IDFromProfile))}}
      parameters:
        - name: body
          in: body
          schema: {{if or (eq $method "Get") (eq $method "Delete")}}
            type: object
            properties:
              id:
                type: {{if $model.IDIsUUID}}string{{else}}{{(index $model.Columns "id").Type}}{{end}}{{else}}{{if or (eq $method "List") (IsCustomList $method)}}
            $ref: "#/definitions/listParams" {{else}}
            $ref: "#/definitions/{{LowerTitle $modelName}}" {{end}}{{end}}{{end}} 
      responses:        {{if eq $method "Delete"}}
        204:
          description: Deleted        {{else}}{{if eq $method "Add"}}
        201:
          description: Created 
          schema:
            type: object
            properties:
              id:
                type: {{if $model.IDIsUUID}}string{{else}}{{(index $model.Columns "id").Type}}{{end}}       {{else}}
        200:
          description: OK        {{end}}{{end}}        {{if or (eq $method "List") (IsCustomList $method) (eq $method "Get") (and (or (eq $method "Edit") (IsCustomEdit $method)) $model.ReturnWhenEdit)}}
          schema:          
            {{if or (eq $method "List") (IsCustomList $method)}}type: object
            properties:
              {{if $model.DetailedPagination}}count:
                type: integer
                format: int32{{end}}
              warnings:
                type: array
                items:
                  type: string
              items:
                type: array
                items:
                  {{end}}$ref: "#/definitions/{{LowerTitle $modelName}}" {{end}}{{end}}
  /{{LowerTitle $modelName}}/accessManager:    
    post:{{if $model.Tags}}
      tags:{{range $_, $tag := $model.Tags}}
        - {{$tag}}{{end}}{{end}}
      operationId: {{LowerTitle $modelName}}AccessManager
      parameters:
        - name: body
          in: body
          schema: 
            $ref: "#/definitions/accessManager" 
      responses:        
        200:
          description: OK    {{range $funcName, $func := $.Functions}}
  /{{LowerTitle $modelName}}/{{$funcName}}:
    post:
      operationId: {{LowerTitle $modelName}}{{$funcName}}
      parameters:
        - name: body
          in: body
          schema:                      
            $ref: "#/definitions/{{$funcName}}Params"                      
      responses:        
        200:
          description: OK                
          schema:             
            $ref: "#/definitions/{{$funcName}}Params" {{end}}{{end}}
definitions:  {{range $modelName, $model := $.Models}}  
  {{LowerTitle $modelName}}:
    type: object
    description: "{{.Description}}"
    properties:      {{range $name, $options := $model.Columns}} {{if $options.IsStruct}}{{if $options.IsArray}}  
      {{$name}}:
        type: array
        items:
          $ref: "#/definitions/{{$options.Type}}"{{else}}            
      {{$name}}:
        $ref: "#/definitions/{{$options.Type}}"{{end}} {{else}}
      {{$name}}:
        type: {{if eq $options.Type "uuid"}}string{{else}}{{$options.Type}}{{end}} {{if $options.Format}}
        format: {{$options.Format}}{{end}}{{if .Length}}
        maxLength: {{.Length}}{{end}}{{if .Default}}
        default: {{.Default}}{{end}}{{if $options.Enum}}
        enum: {{$options.Enum}}{{end}}{{end}}{{end}}{{end}} 
  accessManager:
    type: object
    description: params for set access
    properties:
      user:
        type: string
      group:
        type: string
      read:
        type: boolean 
      write:
        type: boolean 
      delete:
        type: boolean 
      add:
        type: boolean 
      accessManager:
        type: boolean {{if .HaveListMethod}}
  listParams:
    type: object
    description: params for list method
    properties:
      limit:
        type: integer
        default: 10
      offset:
        type: integer
        default: 0
      filters:
        type: array
        items:
          $ref: "#/definitions/filterParams"
      sortBy:
        type: string
      orderBy:
        type: string
        enum: [ASC, DESC]
  filterParams:
    type: object
    description: params for filter list
    properties:
      include:
        type: boolean
      key:
        type: string
      value:
        type: string  {{end}} {{range $funcName, $func := $.Functions}}  
  {{$funcName}}Params:
    type: object
    description: params for {{$funcName}} method
    properties: {{range $param, $paramType := $func.In}}
      {{$param}}:
        type: {{$paramType}} {{end}} {{range $param, $paramType := $func.Out}}
      {{$param}}:
        type: {{$paramType}} {{end}}{{end}}